"""""
Writer: Young Hong
Department: LMBME Clinical Engineering, Vancouver, BC, Canada
Data_Last_Updated: March 6, 2023

Project:
1. The code enters the ECRI Website
2. Sign in to the website
3. Search the kewyword "Cybersecurity"
4. ECRI outputs all the alerts that are associated with "Cybersecurity"
5. If the computer does not have "List of Accession Number" in text file, the computer downloads whole alerts
6. If the computer have "List of Accession Number" in text file, the computer looks if the ECRI has been updated
7. If the ECRI has been updated, the computer only downloads the updated alerts (updated accesion numbers)
8. If the ECRI does not have any updates, the computer does nothing
"""""

##Library Used ##
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.keys import Keys

import time
import requests
import os
import os.path
from os import path

###################

## Fuction - Delay Seconds ##
## output - the system waits three seocnds
def waitThreeSeconds():
    time.sleep(3)   # number represents the number of seconds

## Function - input email address to ECRI website
def EmailAddress():
    Address = browser.find_element("xpath", '//*[@id="Email"]')
    Address.send_keys("young.hong@vch.ca")  #input - email address
    Click_Button = browser.find_element("xpath", '//*[@id="loginForm"]/fieldset/div[2]/button')
    Click_Button.click()

## Function -  input password to ECRI website
def Password():
    Password = browser.find_element("xpath", '//*[@id="Password"]')
    Password.send_keys("Hong89400632!")     #input - password
    Click_Button = browser.find_element("xpath", '//*[@id="loginForm"]/fieldset/div[4]/button[1]')
    Click_Button.click()

## Fuction - Search the keyword "cybersecurity" in ECRI website
def SearchCyber():
    SearchCyber = browser.find_element("xpath", '//*[@id="searchTextBox"]')
    SearchCyber.send_keys("Cybersecurity")  #input - keyword
    SearchCyber.send_keys(Keys.ENTER)

## Function - checks if the file exists in the folder
## input - file address
## Output - True if the file exist or False if the file does not exist
def Check_Existing_Files(file_address):
    check = path.exists(file_address)
    if check:
        return True
    else:
        return False

## Function - finds the length of the pages from the search
## Output - returns the length of the pages in number
def find_number_of_pages():
    num_pages = browser.find_elements("xpath", "//ul/li")
    len_of_pages = len(num_pages)
    return len_of_pages

## Function - finds the number of rows on the table
## Output - returns the number of rows on the table in number
def find_number_of_row():
    num_row = browser.find_elements("xpath", "//table/tbody/tr")
    len_of_table = len(num_row)
    return len_of_table

## Function - finds the accession numbers from the table on the page
## Input - number of list on the page. Ususally num = 25 default.
## Output - returns the list of accession number on the page
def Get_Acc_Num(num):
    list_of_Acc_Num = []
    for i in range(1,num+1):
        table = f"//table/tbody/tr[{i}]/td[1]/a"
        Acc_Num = browser.find_element("xpath", table)
        list_of_Acc_Num.append(Acc_Num.text)
    return list_of_Acc_Num

## Function - creates the folder name with its accession number
## input - list of accession number
## ouptut - creates the folder with the name of accession number
def create_Folders(Num):
    for i in Num:
        directory = str(i)
        parent_dir = '/Users/younghong/Documents/Files/'
        list_of_folders = os.listdir(parent_dir)
        if directory not in list_of_folders:
            path = os.path.join(parent_dir, directory)
            os.mkdir(path)

## Function - creates the list of accession number in text file
## input - list of accession number
## output - text file
def create_TextFile(Num):
    file_path = '/Users/younghong/Documents/Files/Original_Acc_Num.txt'
    check = Check_Existing_Files(file_path)
    if check:
        with open(file_path, 'a+') as f:
            for i in Num:
                f.write(i)
                f.write('\n')
                print(i)
        f.close()
    else:
        with open(file_path, 'w') as f:
            for i in Num:
                f.write(i)
                f.write('\n')
                print(i)
        f.close()

## Function - Downloads all the files from ECRI for the first time
## Output - PDF Files in each folders
def First_Download():
    ## List of Pages
    num_Page = find_number_of_pages()
    for x in range(1,num_Page+1):
        Click_Button = browser.find_element("xpath", f'//ul/li[{x}]')
        Click_Button.click()

        waitThreeSeconds()

        num_row = find_number_of_row()
        List_Acc_Num = Get_Acc_Num(num_row)
        create_Folders(List_Acc_Num)
        create_TextFile(List_Acc_Num)

        for y in range(1, num_row+1):
            Click_Button_2 = browser.find_element("xpath", f'//table/tbody/tr[{y}]/td[1]/a')
            browser.execute_script("arguments[0].click()", Click_Button_2)
            #Click_Button_2.click()
            waitThreeSeconds()
            num_row_2 = find_number_of_row()
            for z in range(1,(num_row_2+1)):
                try:
                    if browser.find_element("xpath", f'//table/tbody/tr[{z}]/td[1]/a'):
                        download_Button = browser.find_element("xpath", f'//table/tbody/tr[{z}]/td[1]/a')
                        download_Button.click()
                        waitThreeSeconds()
                except:
                    pass


            waitThreeSeconds()

            source = "/Users/younghong/Documents/temp_files"
            destination = f'/Users/younghong/Documents/Files/{List_Acc_Num[y-1]}'
            allfiles = os.listdir(source)
            for f in allfiles:
                src_path = os.path.join(source,f)
                dst_path = os.path.join(destination,f)
                os.rename(src_path, dst_path)

            browser.switch_to.window(window_name=browser.window_handles[0])
            browser.back()
            waitThreeSeconds()

            Click_Button_3 = browser.find_element("xpath", f'//ul/li[{x}]')
            Click_Button_3.click()
            waitThreeSeconds()

## Function - updates the list of accession number from the original text file
## Output - list of new accession numbers and original accession number
def Update_Check(text_file):
    original_Acc_Num = []
    with open(text_file, 'r') as f:
        original_Acc_Num = f.read().splitlines()
    f.close()

    new_Acc_Num = Get_Acc_Num(25)

    updated_Acc_Num = []

    for num in new_Acc_Num:
        if num in original_Acc_Num[0]:
            break
        else:
            updated_Acc_Num.append(num)

    if updated_Acc_Num:
        Update_Text_File(updated_Acc_Num, original_Acc_Num)
        return updated_Acc_Num
    else:
        return False

## Function - updates the new list of accession number in the text file
## Output- new list of accession number in the text file
def Update_Text_File(up_num, ori_num):
    i = 0
    for num in up_num:
        ori_num.insert(i,num)
        i = i+1

    with open('/Users/younghong/Documents/Files/Original_Acc_Num.txt', 'w') as f:
        for i in ori_num:
            f.write(i)
            f.write('\n')
        f.close()

## Function - If there is a update from ECRI, it downloads the only updated part
## Output - download the files and save onto the new list of accession number
def Update_Download(up_num):
    create_Folders(up_num)
    length = len(up_num)
    for y in range(1, length + 1):
        Click_Button_2 = browser.find_element("xpath", f'//table/tbody/tr[{y}]/td[1]/a')
        browser.execute_script("arguments[0].click()", Click_Button_2)
        # Click_Button_2.click()
        waitThreeSeconds()

        # Click button for print to download main information from ECRI
        download_Button_main = browser.find_element("xpath", '/html/body/app-root/div/div[3]/div/div/div/alerts-search/app-view/div/app-title-bar/div[1]/div[1]/div/app-menu/div/div[1]/div[2]/div/button/label')
        download_Button_main.click()
        waitThreeSeconds()

        num_row_2 = find_number_of_row()
        for z in range(1, (num_row_2 + 1)):
            try:
                if browser.find_element("xpath", f'//table/tbody/tr[{z}]/td[1]/a'):
                    download_Button = browser.find_element("xpath", f'//table/tbody/tr[{z}]/td[1]/a')
                    download_Button.click()
                    waitThreeSeconds()
            except:
                pass

            waitThreeSeconds()

        source = "/Users/younghong/Documents/temp_files"
        destination = f'/Users/younghong/Documents/Files/{up_num[y-1]}'
        allfiles = os.listdir(source)
        for f in allfiles:
            src_path = os.path.join(source,f)
            dst_path = os.path.join(destination,f)
            os.rename(src_path, dst_path)

        browser.switch_to.window(window_name=browser.window_handles[0])
        browser.back()
        waitThreeSeconds()

## MAIN ##

## Browser Information
url ="https://alerts.ecri.org/alerts-search/recent-alerts"
chrome_options = Options()
profile = {"download.default_directory": "/Users/younghong/Documents/temp_files",
           "download.prompt_for_download": False,
           "download.directory_upgrade": True,
           "plugins.always_open_pdf_externally": True}
chrome_options.add_experimental_option("detach", True)
chrome_options.add_experimental_option("prefs", profile)
browser = webdriver.Chrome(options=chrome_options)
browser.get(url)
## Browser is now opened - ECRI website

waitThreeSeconds()

## Log In Process ##
## Enters the log-in information ##
EmailAddress()
waitThreeSeconds()
Password()
waitThreeSeconds()
## Sign - In process completed

## Search the keyword - 'cybersecurity' ##
SearchCyber()
waitThreeSeconds()
## Only cybersecurity related alerts show up ##

## Check if they have files in folders##
## If there is a text file with the list of accession numbers, it means there is no need to download whole thing
## If there isn't a text file, it needs to download whole accession number
Acc_Num_Text_File_Address = '/Users/younghong/Documents/Files/Original_Acc_Num.txt'
Check = Check_Existing_Files(Acc_Num_Text_File_Address)

if Check:
    Update_Status = Update_Check(Acc_Num_Text_File_Address)
    if Update_Status:
        Update_Download(Update_Status)
        print("Update Completed")

    else:
        print("No Update Require")

else:
    First_Download()
    #first_time_downloading

