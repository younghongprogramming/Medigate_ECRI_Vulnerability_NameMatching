"""""
Writer: Young Hong
Department: LMBME Clinical Engineering, Vancouver, BC, Canada
Data_Last_Updated: March 6, 2023

Project:
1. The code enters the ECRI Website
2. Sign in to the website
3. Search the kewyword "Cybersecurity"
4. ECRI outputs all the alerts that are associated with "Cybersecurity"
5. If the computer does not have "List of Accession Number" in text file, the computer downloads whole alerts
6. If the computer have "List of Accession Number" in text file, the computer looks if the ECRI has been updated
7. If the ECRI has been updated, the computer only downloads the updated alerts (updated accesion numbers)
8. If the ECRI does not have any updates, the computer does nothing
"""""

##Library Used ##
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.keys import Keys

import time
import requests
import os
import os.path
from os import path

import pandas as pd

###################

## Fuction - Delay Seconds ##
## output - the system waits three seocnds
def waitThreeSeconds():
    time.sleep(5)   # number represents the number of seconds

## Function - input email address to ECRI website
def EmailAddress():
    Address = browser.find_element("xpath", '//*[@id="Email"]')
    Address.send_keys("young.hong@vch.ca")  #input - email address
    Click_Button = browser.find_element("xpath", '//*[@id="loginForm"]/fieldset/div[2]/button')
    Click_Button.click()

## Function -  input password to ECRI website
def Password():
    Password = browser.find_element("xpath", '//*[@id="Password"]')
    Password.send_keys("Hong89400632!")     #input - password
    Click_Button = browser.find_element("xpath", '//*[@id="loginForm"]/fieldset/div[4]/button[1]')
    Click_Button.click()

## Function - finds the number of rows on the table
## Output - returns the number of rows on the table in number
def find_number_of_row():
    num_row = browser.find_elements("xpath", "//table/tbody/tr")
    len_of_table = len(num_row)
    return len_of_table

## Function - checks if the file exists in the folder
## input - file address
## Output - True if the file exist or False if the file does not exist
def Check_Existing_Files(file_address):
    check = path.exists(file_address)
    if check:
        return True
    else:
        return False

## Function - creates the folder name with its accession number
## input - list of accession number
## ouptut - creates the folder with the name of accession number
def create_Folders(Num):
    for i in Num:
        #directory = str(i)
        directory = i
        parent_dir = '/Users/younghong/Documents/Files/'
        list_of_folders = os.listdir(parent_dir)
        if directory not in list_of_folders:
            path = os.path.join(parent_dir, directory)
            os.mkdir(path)

## Function - creates the list of accession number in text file
## input - list of accession number
## output - text file
def create_TextFile(Num):
    file_path = '/Users/younghong/Documents/Files/Original_Acc_Num.txt'
    check = Check_Existing_Files(file_path)
    if check:
        with open(file_path, 'a+') as f:
            for i in Num:
                f.write(i)
                f.write('\n')
                print(i)
        f.close()
    else:
        with open(file_path, 'w') as f:
            for i in Num:
                f.write(i)
                f.write('\n')
                print(i)
        f.close()

def SearchAndDownload(list_Acc_Num):
    # Create Folders
    create_Folders(list_Acc_Num)
    # Create Text Files
    create_TextFile(list_Acc_Num)

    #search the accession number
    for num in list_Acc_Num :
        try:
            Search = browser.find_element("xpath", '//*[@id="searchTextBox"]')
            Search.send_keys(num)  #input - keyword
            Search.send_keys(Keys.ENTER)
            waitThreeSeconds()

            #click the accessino number
            Click_Button = browser.find_element("xpath", '//*[@id="ecri-body-workspace"]/div[3]/div/div/div/alerts-search/app-search/div[2]/app-grid-of-search/div[3]/div/div/kendo-grid/div/kendo-grid-list/div/div[1]/table/tbody/tr/td[1]/a')
            Click_Button.click()
            waitThreeSeconds()

            #download the page
            download_Button = browser.find_element("xpath", '/html/body/app-root/div/div[3]/div/div/div/alerts-search/app-view/div/app-title-bar/div[1]/div[1]/div/app-menu/div/div[1]/div[2]/div/button/label')
            download_Button.click()
            waitThreeSeconds()

            #clcick button to download PDF files
            num_row_2 = find_number_of_row()
            for z in range(1, (num_row_2 + 1)):
                try:
                    if browser.find_element("xpath", f'//table/tbody/tr[{z}]/td[1]/a'):
                        download_Button_2= browser.find_element("xpath", f'//table/tbody/tr[{z}]/td[1]/a')
                        download_Button_2.click()
                        waitThreeSeconds()
                except:
                    pass
            waitThreeSeconds()

            #Change the file directory to the appropirate folder
            source = "/Users/younghong/Documents/temp_files"
            destination = f'/Users/younghong/Documents/Files/{num}'
            allfiles = os.listdir(source)
            for f in allfiles:
                src_path = os.path.join(source, f)
                dst_path = os.path.join(destination, f)
                os.rename(src_path, dst_path)

            #Go back to the page
            browser.switch_to.window(window_name=browser.window_handles[0])
            browser.back()
            waitThreeSeconds()
        except:
            browser.refresh()
            waitThreeSeconds()

            Search = browser.find_element("xpath", '//*[@id="searchTextBox"]')
            Search.send_keys(num)  #input - keyword
            Search.send_keys(Keys.ENTER)
            waitThreeSeconds()

            #click the accessino number
            Click_Button = browser.find_element("xpath", '//*[@id="ecri-body-workspace"]/div[3]/div/div/div/alerts-search/app-search/div[2]/app-grid-of-search/div[3]/div/div/kendo-grid/div/kendo-grid-list/div/div[1]/table/tbody/tr/td[1]/a')
            Click_Button.click()
            waitThreeSeconds()

            #download the page
            download_Button = browser.find_element("xpath", '/html/body/app-root/div/div[3]/div/div/div/alerts-search/app-view/div/app-title-bar/div[1]/div[1]/div/app-menu/div/div[1]/div[2]/div/button/label')
            download_Button.click()
            waitThreeSeconds()

            #clcick button to download PDF files
            num_row_2 = find_number_of_row()
            for z in range(1, (num_row_2 + 1)):
                try:
                    if browser.find_element("xpath", f'//table/tbody/tr[{z}]/td[1]/a'):
                        download_Button_2= browser.find_element("xpath", f'//table/tbody/tr[{z}]/td[1]/a')
                        download_Button_2.click()
                        waitThreeSeconds()
                except:
                    pass
            waitThreeSeconds()

            #Change the file directory to the appropirate folder
            source = "/Users/younghong/Documents/temp_files"
            destination = f'/Users/younghong/Documents/Files/{num}'
            allfiles = os.listdir(source)
            for f in allfiles:
                src_path = os.path.join(source, f)
                dst_path = os.path.join(destination, f)
                os.rename(src_path, dst_path)

            #Go back to the page
            browser.switch_to.window(window_name=browser.window_handles[0])
            browser.back()
            waitThreeSeconds()



## Browser Information
url ="https://alerts.ecri.org/alerts-search/recent-alerts"
chrome_options = Options()
profile = {"download.default_directory": "/Users/younghong/Documents/temp_files",
           "download.prompt_for_download": False,
           "download.directory_upgrade": True,
           "plugins.always_open_pdf_externally": True}
chrome_options.add_experimental_option("detach", True)
chrome_options.add_experimental_option("prefs", profile)
browser = webdriver.Chrome(options=chrome_options)
browser.get(url)
## Browser is now opened - ECRI website

waitThreeSeconds()

## Log In Process ##
## Enters the log-in information ##
EmailAddress()
waitThreeSeconds()
Password()
waitThreeSeconds()
## Sign - In process completed

ExcelPath = '/Users/younghong/Documents/Medigate_ECRI_Accession_Number_Vulnerabilities/ECRI Cyber Alerts_from 2020 through 2023.xlsx'

df1 = pd.read_excel(ExcelPath)
Acc_Num = df1.loc[:,"Accession Number"]
list_Acc_Num = []
for num in Acc_Num:
    list_Acc_Num.append(num)

SearchAndDownload(list_Acc_Num)
